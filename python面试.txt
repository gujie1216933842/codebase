1.python是一种解释型语言,运行之前不需要编译,类似的语言有php,ruby

2.python动态类型语言,指的是在你声明变量时,不需要声明变量的类型,直接写 x =1 或者 x = 'abc' 程序不会报错

3.python的优点
  a.python代码编写快,
  b.用途广泛,被称为胶水语言
  c.让程序员专注于算法和数据结构的设计,而不用处理底层的细节

4.python和多线程(multi-threading)
  python并不支持正真意义上的多线程,python中提供了多线程的包,但是你想通过多线程提高代码的速度,使用多线程包并不是一个好的主意.
  python中有一个被称为(global interpreter lock)gil的东西,它会确保在任何时候的的多线程中,只有一个被执行.而且线程执行速度非常快,会让你认为线程是并行执行的,但是实际上是轮流执行的.经过gil这道关卡处理,会增加执行的开销.这意味着,如果你想提高代码的运行速度,使用threading包并不是一个很好的方法

  不过还是有很多理由促使我们去使用threading包,如果你想同时执行一些任务,而且不考虑效率问题,那么使用这个包是完全没有问题的,而且也很方便.
  但是大部分情况下,并不是这么一回事,你会希望把多线程的部分外包给操作系统完成(通过开启多个进程),或者某些调用你的python代码的外部程序(例如spark和hadoop),又或者是你的python代码调用其他代码

5.python循环遍历range()的边界问题
    >>> range(1,4)
    [1, 2, 3]
    >>> range(4)
    [0, 1, 2, 3]
    >>> range(1,4,2)  
    [1, 3]


6.*args,**kwargs,这两个参数是什么意思,我们为什么要使用它
答案:
如果我们不确认要往函数中去传递多少个参数,或者我们想往函数中以列表或者元组的形式传参数,就要使用*args    
如果我们不知道要往函数中传递多少个关键词参数,或者像传入字典的值作为关键字参数时,就用**kwargs
args和kwargs是两个约定俗成的标记用法,你也可以用*janc和**jajsd,但是这样并不太妥


https://www.cnblogs.com/Allen-rg/p/7693394.html






